{"version":3,"sources":["logo-transparent-white.png","components/Home.js","components/Documentation.js","components/Examples.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","src","logo","alt","speed","ButtonGroup","color","aria-label","Button","component","Link","to","onClick","window","open","Documentation","language","style","docco","Examples","target","href","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,MAA0B,mD,0CC8CxBA,MAxCjB,WAMI,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKA,UAAU,YAAYC,IAAKC,EAAMC,IAAI,SAE1C,cAAC,IAAD,CAAQC,MAAO,GAAf,SACI,sBAAMJ,UAAU,cAAhB,yFAGJ,qBAAKA,UAAU,WAAf,SAEI,eAACK,EAAA,EAAD,CAAaC,MAAM,QAAQC,aAAW,gCAAtC,UACI,cAACC,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAG,WAA5B,qBAKA,cAACH,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAG,iBAA5B,2BAIA,cAACH,EAAA,EAAD,CAAQI,QAxBH,WACjBC,OAAOC,KAAK,8DAuBA,SACI,oD,kBC4BTC,MA1Df,WACE,OACE,qBAAKf,UAAU,MAAf,SAEE,sBAAKA,UAAU,cAAf,UACE,iDAEA,6SAEA,cAAC,IAAD,CAAmBgB,SAAS,OAAOC,MAAOC,IAA1C,SACG,qiBAGH,oIAEA,cAAC,IAAD,CAAmBF,SAAS,OAAOC,MAAOC,IAA1C,SACG,uCAZL,iHAiBE,cAAC,IAAD,CAAmBF,SAAS,aAAaC,MAAOC,IAAhD,SACO,kIAIP,uKAEA,+BACE,iGAGE,cAAC,IAAD,CAAmBF,SAAS,OAAOC,MAAOC,IAA1C,SACG,wEAGH,cAAC,IAAD,CAAmBF,SAAS,aAAaC,MAAOC,IAAhD,SACG,2DAKL,uFAGE,cAAC,IAAD,CAAmBF,SAAS,aAAaC,MAAOC,IAAhD,SACG,oNAJL,2H,OCCKC,MA3Cf,WACE,OAEE,sBAAKnB,UAAU,cAAf,UACE,+CAGA,qIAEA,qBAAIA,UAAU,oBAAd,UACE,iJACA,yFACE,+BACE,+HACA,qGACA,uHAGJ,+GACE,+BACE,uFACA,gGAGJ,gJACA,gIAGF,kMAEA,qBAAKA,UAAU,WAAf,SACE,cAACQ,EAAA,EAAD,UACE,mBAAGY,OAAO,SAASC,KAAK,gBAAxB,qCCQKC,MA9Bf,WAEE,OAEE,sBAAKtB,UAAU,MAAf,UAEE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAAlB,SACE,cAAC,EAAD,WAKN,qBAAKxB,UAAU,aAAf,oECvBSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.19abe1cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-transparent-white.658103d3.png\";","import logo from '../logo-transparent-white.png';\nimport '../App.css';\nimport {Button, ButtonGroup} from '@material-ui/core';\nimport {Link} from \"react-router-dom\";\nimport Typing from 'react-typing-animation';\n  \nfunction Home() {\n\n    const openDownload = () => {\n        window.open('https://github.com/csc309-winter-2021/js-library-chuajos2');\n    }\n\n    return (\n        <div className=\"App-content\">\n            <img className=\"main-logo\" src={logo} alt=\"logo\" />\n\n            <Typing speed={30}>\n                <span className=\"slogan-text\">A tool that makes it easier to navigate and browse through long webpages.</span>\n            </Typing>\n\n            <div className=\"nav-area\">  \n\n                <ButtonGroup color=\"black\" aria-label=\"outlined primary button group\">\n                    <Button component={Link} to=\"/Example\">\n                        Example\n                    </Button>\n\n\n                    <Button component={Link} to=\"/Documentation\">\n                        Documentation\n                    </Button>\n\n                    <Button onClick={openDownload}>\n                        <a>Download</a>\n                    </Button>\n                </ButtonGroup>\n\n            </div> \n\n\n\n\n        </div>\n    );\n  }\n  \n  export default Home;\n  ","import SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nfunction Documentation() {\n  return (\n    <div className=\"App\">\n\n      <div className=\"App-content\">\n        <h1> Documentation </h1> \n\n        <p>To get started with Smartscroll, you will need to include the necessary JS and jQuery files in the head tag of your HTML file. As well, the SmartScroll library depends on the html2canvas JS library, which has been included in the Github repository under server/build. </p> \n\n        <SyntaxHighlighter language=\"html\" style={docco}>\n          {\"<head>\\n\\n<!-- css and js imports-->\\n<link rel='stylesheet' type='text/css' href='css/SmartScroll.css'> \\n<script type='module' src='js/SmartScroll.js'></script> \\n<link rel='stylesheet' type='text/css' href='css/examples.css'> \\n<script type='module' src='js/examples.js'></script> \\n\\n<!-- jqueryUI import-->\\n <link rel='stylesheet' href='../jquery-ui-1.12.1/jquery-ui.min.css'> \\n<script src='../jquery-ui-1.12.1/external/jquery/jquery.js'></script> \\n<script src='../jquery-ui-1.12.1/jquery-ui.min.js'></script>\\n\\n</head>\"}\n        </SyntaxHighlighter>\n\n        <p>As well, there is an initalization function that needs to be run upon the loading of the page body.</p> \n\n        <SyntaxHighlighter language=\"html\" style={docco}>\n          {\"<body onload='initializeScroll()'>\"}\n        </SyntaxHighlighter>\n\n        This function call is paired with a call to the SmartScroll initialize() function in the JS file for the page.\n\n        <SyntaxHighlighter language=\"javascript\" style={docco}>\n              {\"let scroll = new SmartScroll(); //defined at top of file \\n ... \\n window.initializeScroll = () =>  {scroll.initialize({}); }\"}\n        </SyntaxHighlighter>\n\n\n        <p>And just like that, Smartscroll is ready to be used! However, there are a few more ways to interact with the library programatically: </p> \n\n        <ol> \n          <li> \n            Trigger the open event through a button click (and JS handler): \n\n            <SyntaxHighlighter language=\"html\" style={docco}>\n              {\"<button type='button' onclick='openScroll()'>SmartScroll! </button>\"}\n            </SyntaxHighlighter>\n\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\n              {\"window.initializeScroll = () =>  { scroll.open(); }\"}\n            </SyntaxHighlighter>\n\n          \n          </li>   \n          <li> \n            Specify custom styles to be used upon initialization: \n\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\n              {\"window.initializeScroll = function() { \\n const scrollStyles = { \\n  'background-color': 'red', \\n 'button-color': 'green', \\n   'button-text-color': 'white' \\n } \\n\\n  scroll.initialize(scrollStyles); \\n } \"}\n            </SyntaxHighlighter>\n\n            This will set the background color of the preview/settings windows, the button colours, and the text colour. \n          </li> \n        </ol> \n\n      </div>\n    </div>\n  );\n}\n\nexport default Documentation;\n","import \"./Examples.css\";\nimport {Button} from '@material-ui/core';\n\nfunction Examples() {\n  return (\n    \n    <div className=\"App-content\">\n      <h1> Example Demo</h1> \n\n\n      <p> Welcome to a demo of the SmartScroll plugin! Here's everything you need to know to start using it. </p>\n\n      <ul className=\"instructions-list\">\n        <li> To launch SmartScroll, click the button on the top left of the page or use the keyboard shortcut Ctrl-Shift-O </li> \n        <li> Navigate through the page using the following options:\n          <ul>\n            <li> Scroll through the main page the normal way (scroll wheel on mouse, or gesture on touchpad) </li>  \n            <li> Click on any point in the canvas preview to scroll to that point  </li>  \n            <li> Click and drag on the scroll overlay (light gray) on top of the preview canvas</li>  \n          </ul> \n        </li> \n        <li>Change the orientation of SmartScroll using the following keyboard shortcuts: \n          <ul>\n            <li> Ctrl-Shift-L to move the preview window to the left </li>  \n            <li> Ctrl Shift-R to move the preview window to the right   </li>  \n          </ul> \n        </li> \n        <li>Launch the settings popup at the top left of the preview window to modify colour themes or window orientation </li> \n        <li>Close SmartScroll by using the provided Close Button or the Ctrl-Shift-C keyboard shortcut.</li> \n      </ul> \n    \n      <p>When you have scrolled to the bottom or the top of the current preview, the preview window will update and show your new location relative to the page contents. </p> \n\n      <div className=\"nav-area\"> \n        <Button >\n          <a target=\"_blank\" href=\"examples.html\" >Try SmartScroll</a>\n        </Button>\n      </div> \n      \n    </div>\n\n \n\n  );\n}\n\nexport default Examples;\n","import './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport Documentation from \"./components/Documentation\";\nimport Examples from \"./components/Examples\";\n\n\nfunction App() {\n\n  return (\n    \n    <div className=\"App\">\n      \n      <Router>\n        <Switch> \n          <Route exact path=\"/\">\n            <Home/> \n          </Route> \n\n          <Route exact path=\"/example\">\n            <Examples/> \n          </Route> \n          \n          <Route exact path=\"/documentation\">\n            <Documentation/> \n          </Route> \n        </Switch> \n      </Router> \n\n      <div className=\"App-footer\"> \n        CSC309 Individual Project - Joshua Chua (chuajos2)\n      </div> \n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}